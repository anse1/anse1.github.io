digraph "prod"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{prod\n|+ pprod\l+ scope\l+ level\l+ retries\l+ retry_limit\l|+ prod()\l+ indent()\l+ out()\l+ match()\l+ accept()\l+ fail()\l+ retry()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for AST nodes."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{common_table_expression\n|+ with_queries\l+ query\l+ refs\l+ myscope\l|+ out()\l+ accept()\l+ common_table_expression()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structcommon__table__expression.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{from_clause\n|+ reflist\l|+ out()\l+ from_clause()\l+ ~from_clause()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structfrom__clause.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{join_cond\n||+ join_cond()\l+ factory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structjoin__cond.html",tooltip=" "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{expr_join_cond\n|+ joinscope\l+ search\l|+ expr_join_cond()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structexpr__join__cond.html",tooltip=" "];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{simple_join_cond\n|+ condition\l|+ simple_join_cond()\l+ out()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structsimple__join__cond.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{modifying_stmt\n|+ victim\l+ myscope\l|+ modifying_stmt()\l+ pick_victim()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmodifying__stmt.html",tooltip=" "];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{delete_stmt\n|+ search\l|+ delete_stmt()\l+ ~delete_stmt()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdelete__stmt.html",tooltip=" "];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{delete_returning\n|+ select_list\l|+ delete_returning()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdelete__returning.html",tooltip=" "];
  Node7 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{insert_stmt\n|+ value_exprs\l|+ insert_stmt()\l+ ~insert_stmt()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structinsert__stmt.html",tooltip=" "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{upsert_stmt\n|+ set_list\l+ constraint\l+ search\l|+ upsert_stmt()\l+ out()\l+ accept()\l+ ~upsert_stmt()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structupsert__stmt.html",tooltip=" "];
  Node7 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{merge_stmt\n|+ target_table_\l+ data_source\l+ join_condition\l+ clauselist\l|+ merge_stmt()\l+ ~merge_stmt()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmerge__stmt.html",tooltip=" "];
  Node7 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{update_stmt\n|+ search\l+ set_list\l|+ update_stmt()\l+ ~update_stmt()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structupdate__stmt.html",tooltip=" "];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node14 [label="{update_returning\n|+ select_list\l|+ update_returning()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structupdate__returning.html",tooltip=" "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node15 [label="{prepare_stmt\n|+ q\l+ id\l+ seq\l|+ out()\l+ prepare_stmt()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structprepare__stmt.html",tooltip=" "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node16 [label="{query_spec\n|+ set_quantifier\l+ from_clause\l+ select_list\l+ search\l+ limit_clause\l+ myscope\l|+ out()\l+ query_spec()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structquery__spec.html",tooltip=" "];
  Node16 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node17 [label="{select_for_update\n|+ lockmode\l|+ out()\l+ select_for_update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structselect__for__update.html",tooltip=" "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node18 [label="{select_list\n|+ value_exprs\l+ derived_table\l+ columns\l|+ select_list()\l+ out()\l+ ~select_list()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structselect__list.html",tooltip=" "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node19 [label="{set_list\n|+ value_exprs\l+ names\l|+ set_list()\l+ ~set_list()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structset__list.html",tooltip=" "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node20 [label="{table_ref\n|+ refs\l|+ table_ref()\l+ ~table_ref()\l+ factory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structtable__ref.html",tooltip=" "];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node21 [label="{joined_table\n|+ type\l+ alias\l+ lhs\l+ rhs\l+ condition\l|+ out()\l+ joined_table()\l+ ident()\l+ ~joined_table()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structjoined__table.html",tooltip=" "];
  Node20 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node22 [label="{table_or_query_name\n|+ t\l|+ out()\l+ table_or_query_name()\l+ ~table_or_query_name()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structtable__or__query__name.html",tooltip=" "];
  Node20 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node23 [label="{table_sample\n|+ t\l|+ out()\l+ table_sample()\l+ ~table_sample()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structtable__sample.html",tooltip=" "];
  Node20 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node24 [label="{table_subquery\n|+ is_lateral\l+ query\l|+ out()\l+ table_subquery()\l+ ~table_subquery()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structtable__subquery.html",tooltip=" "];
  Node24 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node25 [label="{lateral_subquery\n||+ lateral_subquery()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structlateral__subquery.html",tooltip=" "];
  Node20 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node26 [label="{target_table\n|+ victim_\l|+ out()\l+ target_table()\l+ ~target_table()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structtarget__table.html",tooltip=" "];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node27 [label="{value_expr\n|+ type\l|+ out()\l+ ~value_expr()\l+ value_expr()\l+ factory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structvalue__expr.html",tooltip=" "];
  Node27 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node28 [label="{atomic_subselect\n|+ tab\l+ col\l+ offset\l+ agg\l|+ atomic_subselect()\l+ out()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structatomic__subselect.html",tooltip=" "];
  Node27 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node29 [label="{bool_expr\n||+ ~bool_expr()\l+ bool_expr()\l+ factory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structbool__expr.html",tooltip=" "];
  Node29 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node30 [label="{bool_binop\n|+ lhs\l+ rhs\l|+ bool_binop()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structbool__binop.html",tooltip=" "];
  Node30 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node31 [label="{bool_term\n|+ op\l|+ ~bool_term()\l+ out()\l+ bool_term()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structbool__term.html",tooltip=" "];
  Node30 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node32 [label="{comparison_op\n|+ oper\l|+ comparison_op()\l+ ~comparison_op()\l+ out()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structcomparison__op.html",tooltip=" "];
  Node30 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node33 [label="{distinct_pred\n||+ distinct_pred()\l+ ~distinct_pred()\l+ out()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structdistinct__pred.html",tooltip=" "];
  Node29 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node34 [label="{exists_predicate\n|+ subquery\l|+ ~exists_predicate()\l+ exists_predicate()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structexists__predicate.html",tooltip=" "];
  Node29 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node35 [label="{null_predicate\n|+ negate\l+ expr\l|+ ~null_predicate()\l+ null_predicate()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structnull__predicate.html",tooltip=" "];
  Node29 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node36 [label="{truth_value\n|+ op\l|+ ~truth_value()\l+ out()\l+ truth_value()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structtruth__value.html",tooltip=" "];
  Node27 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node37 [label="{case_expr\n|+ condition\l+ true_expr\l+ false_expr\l|+ case_expr()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structcase__expr.html",tooltip=" "];
  Node27 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node38 [label="{coalesce\n|+ abbrev_\l+ value_exprs\l|+ ~coalesce()\l+ coalesce()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structcoalesce.html",tooltip=" "];
  Node38 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node39 [label="{nullif\n||+ ~nullif()\l+ nullif()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structnullif.html",tooltip=" "];
  Node27 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node40 [label="{column_reference\n|+ reference\l|+ column_reference()\l+ out()\l+ ~column_reference()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structcolumn__reference.html",tooltip=" "];
  Node27 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node41 [label="{const_expr\n|+ expr\l|+ const_expr()\l+ out()\l+ ~const_expr()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structconst__expr.html",tooltip=" "];
  Node27 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node42 [label="{funcall\n|+ proc\l+ is_aggregate\l+ parms\l|+ out()\l+ ~funcall()\l+ funcall()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structfuncall.html",tooltip=" "];
  Node27 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node43 [label="{window_function\n|+ partition_by\l+ order_by\l+ aggregate\l|+ out()\l+ ~window_function()\l+ window_function()\l+ accept()\l+ allowed()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structwindow__function.html",tooltip=" "];
  Node1 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node44 [label="{when_clause\n|+ matched\l+ condition\l|+ when_clause()\l+ ~when_clause()\l+ out()\l+ accept()\l+ factory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structwhen__clause.html",tooltip=" "];
  Node44 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node45 [label="{when_clause_insert\n|+ exprs\l|+ when_clause_insert()\l+ ~when_clause_insert()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structwhen__clause__insert.html",tooltip=" "];
  Node44 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node46 [label="{when_clause_update\n|+ set_list\l+ myscope\l|+ when_clause_update()\l+ ~when_clause_update()\l+ out()\l+ accept()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structwhen__clause__update.html",tooltip=" "];
}
